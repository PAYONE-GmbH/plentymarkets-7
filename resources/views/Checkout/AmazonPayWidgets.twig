<script type="text/javascript">
    $( document ).ready(function() {
        window.onAmazonLoginReady = function() {
            amazon.Login.setClientId('{{ content.clientId }}');
        };

        addressBookWidget = new OffAmazonPayments.Widgets.AddressBook({
            sellerId: '{{ content.sellerId }}',
            scope: '{{ content.addressBookScope }}',
            onOrderReferenceCreate: function(orderReference) {
                // Here is where you can grab the Order Reference ID.
                console.log("AmazonOrderReference: " + orderReference.getAmazonOrderReferenceId());
                orderReference.getAmazonOrderReferenceId();
            },
            onAddressSelect: function(orderReference) {
                // Replace the following code with the action that you want
                // to perform after the address is selected. The
                // amazonOrderReferenceId can be used to retrieve the address
                // details by calling the GetOrderReferenceDetails operation.

                // If rendering the AddressBook and Wallet widgets
                // on the same page, you do not have to provide any additional
                // logic to load the Wallet widget after the AddressBook widget.
                // The Wallet widget will re-render itself on all subsequent
                // onAddressSelect events, without any action from you.
                // We don't recommend that you explicitly refresh it.
            },
            design: {
                designMode: 'responsive'
            },
            onReady: function(orderReference) {
                // Enter code here you want to be executed
                // when the AddressBook widget has been rendered.
            },
            onError: function(error) {
                // Your error handling code.
                // During development you can use the following
                // code to view error messages:
                // console.log(error.getErrorCode() + ': ' + error.getErrorMessage());
                // See "Handling Errors" for more information.
            }
        });
        addressBookWidget.bind("addressBookWidgetDiv");

        walletWidget = new OffAmazonPayments.Widgets.Wallet({
            sellerId: '{{ content.sellerId }}',
            scope: '{{ content.walletScope }}',
            onPaymentSelect: function(orderReference) {
                // Replace this code with the action that you want to perform
                // after the payment method is selected.

                // Ideally this would enable the next action for the buyer
                // including either a "Continue" or "Place Order" button.
            },
            design: {
                designMode: 'responsive'
            },
            onError: function(error) {
                // Your error handling code.
                // During development you can use the following
                // code to view error messages:
                // console.log(error.getErrorCode() + ': ' + error.getErrorMessage());
                // See "Handling Errors" for more information.
            }
        });
        walletWidget.setPresentmentCurrency("EUR"); // ISO-4217 currency code, merchant is expected to enter a valid currency supported by Amazon Pay.
        walletWidget.bind("walletWidgetDiv");

    });
</script>
